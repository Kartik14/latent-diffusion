model:
  base_learning_rate: 1.0e-5   # set to target_lr by starting main.py with '--scale_lr False'
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.0015
    linear_end: 0.0195
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: relative_file_path_
    cond_stage_key: class_label
    image_size: 16
    channels: 16
    cond_stage_trainable: true
    conditioning_key: crossattn
    monitor: val/loss
    use_ema: False
    
    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 16
        in_channels: 16
        out_channels: 16
        model_channels: 96
        attention_resolutions:
        - 4
        - 2
        num_res_blocks: 2
        channel_mult:
        - 1
        - 2
        - 3
        num_heads: 1
        use_spatial_transformer: true
        transformer_depth: 1
        context_dim: 8

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKLWithSavedEmbeds
      params:
        embed_dim: 16
        encoder_dim: 1280
        train_embeds_dict: "saved_embeds/jepa_afhq_embeds_train.npy"
        val_embeds_dict: "saved_embeds/jepa_afhq_embeds_val.npy"
        quant_conv_ckpt: "logs/vae_output_latent_dim_16_kl_0.05_lr_0.01/vae_99.pth"
        monitor: "val/rec_loss"
        ckpt_path: logs/2024-04-24T18-31-43_afhq-ldm-kl-16-jepa-vae/checkpoints/epoch=000149.ckpt
        ddconfig:
          double_z: True
          z_channels: 16
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 64
          ch_mult: [ 1,1,2,2 ]  # num_down = len(ch_mult)-1
          num_res_blocks: 2
          attn_resolutions: [16]
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.ClassEmbedder
      params:
        n_classes: 3
        embed_dim: 8
        key: class_label

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 24
    num_workers: 1
    wrap: True
    train:
      target: ldm.data.afhq.AFHQTrain
      params:
        size: 224
    validation:
      target: ldm.data.afhq.AFHQVal
      params:
        size: 224

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 2000
        max_images: 8
        increase_log_steps: False


  trainer:
    benchmark: True